{
  "properties": [
	
	{ "name": "astra.api.applicationToken",
      "type": "java.lang.String",
      "description": "Also called Api Key, it acts as your credentials to use Astra Apis.",
      "defaultValue": "AstraCS:00000000000000000000000000000000000000000000000000" },
    { "name": "astra.api.databaseId",
      "type": "java.lang.String",
      "description": "Unique identifier of an Astra database, part of urls to access Stargate Api.",
      "defaultValue": "11111111-2222-3333-4444-555555555555"},
    { "name": "astra.api.databaseRegion",
      "type": "java.lang.String",
      "defaultValue": "us-east-1",
      "description": "Main region name of an Astra database to connect (also Datacenter name)"},
     { "name": "astra.api.cross-region-failback",
      "type": "java.lang.Boolean",
      "defaultValue": "true",
      "description": "If enabled, and Astra contains multiple regions, on region failure will failback"},
    { "name": "astra.api.grpc.enabled",
      "type": "java.lang.Boolean",
      "description":"If set to true a connection will be established to Astra using gRPC stubs",
      "defaultValue": "false" },
    
    { "name": "astra.cql.enabled",
      "type": "java.lang.Boolean",
      "description":"If set to true a connection will be established to Astra using CqlSession",
      "defaultValue": "false" },
    { "name": "astra.cql.downloadScb.enabled",
      "type": "java.lang.Boolean",
      "description":"If set to true the secure connect bundle zip files will be downloaded using Devops API.",
      "defaultValue": "false"},
    { "name": "astra.cql.downloadScb.path",
      "type": "java.lang.String",
      "description":"Folder to download and read SCB if not cloud zip file provided in configuration.",
      "defaultValue": "~/.astra"},
    { "name": "astra.cql.downloadScb.pattern",
      "type": "java.lang.String",
      "description":"File name pattern to create or read SCB.",
      "defaultValue": "scb_{DB_ID}_{DB_REGION}.zip"},
    { "name": "astra.cql.metrics",
      "type": "java.lang.Boolean",
      "description":"If enabled and the actuactor is in the classpath the metrics will be available",
      "defaultValue": "false" },
    
    
    { "name": "astra.cql.driver-config.basic.contact-points",
      "type": "java.util.List",
      "description":"The contact points to use for the initial connection to the cluster.",
      "defaultValue": "127.0.0.1:9042"},
    { "name": "astra.cql.driver-config.basic.session-name",
      "type": "java.lang.String",
      "description":"A name that uniquely identifies the driver instance created from this configuration. This is used as a prefix for log messages and metrics.",
      "defaultValue": "my_session"},
    { "name": "astra.cql.driver-config.basic.session-keyspace",
      "description":"The name of the keyspace that the session should initially be connected to.", 
      "type": "java.lang.String",
      "defaultValue": "my_keyspace"},
    { "name": "astra.cql.driver-config.basic.config-reload-interval",
      "description":"How often the driver tries to reload the configuration, How often the driver tries to reload the configuration.", 
      "type": "java.time.Duration",
      "defaultValue": "5 minutes"},
    { "name": "astra.cql.driver-config.basic.request.timeout",
      "description":"How long the driver waits for a request to complete. This is a global limit on the duration of a session.execute() call, including any internal retries the driver might do.", 
      "type": "java.time.Duration",
      "defaultValue": "2 seconds" },
    { "name": "astra.cql.driver-config.basic.request.page-size",
      "description":"The page size. This controls how many rows will be retrieved simultaneously in a single network roundtrip.", 
      "type": "java.lang.Integer",
      "defaultValue": "5000" },
    { "name": "astra.cql.driver-config.basic.request.serial-consistency",
      "description":"The serial consistency level. The allowed values are SERIAL and LOCAL_SERIAL.", 
      "type": "java.lang.String",
      "defaultValue": "SERIAL" },
    { "name": "astra.cql.driver-config.basic.request.consistency",
      "description":"How long the driver waits for a request to complete. This is a global limit on the duration of a session.execute() call", 
      "type": "java.lang.String", 
      "defaultValue": "LOCAL_ONE" },
    { "name": "astra.cql.driver-config.basic.load-balancing-policy.class",
      "type": "java.lang.String",
      "description":"The class of the policy. If it is not qualified, the driver assumes that it resides in the package com.datastax.oss.driver.internal.core.loadbalancing.",
      "defaultValue": "DefaultLoadBalancingPolicy" },
    { "name": "astra.cql.driver-config.basic.load-balancing-policy.filter.class",
      "type": "java.lang.String",
      "description":"The datacenter that is considered local: the default policy will only include nodes from",
      "defaultValue": "datacenter1"},
    { "name": "astra.cql.driver-config.basic.load-balancing-policy.local-datacenter",
      "type": "java.lang.String",
      "description":"A custom filter to include/exclude nodes.",
      "defaultValue": "" },
    
    { "name": "astra.cql.driver-config.advanced.connection.init-query-timeout",
      "type": "java.time.Duration",
      "description":"The timeout to use for internal queries that run as part of the initialization process, just after we open a connection",
      "defaultValue": "500 milliseconds" },
    { "name": "astra.cql.driver-config.advanced.connection.set-keyspace-timeout",
      "type": "java.time.Duration",
      "description":"The timeout to use when the driver changes the keyspace on a connection at runtime (this happens when the client issues a `USE ...` query, and all connections belonging to the current session need to be updated).",
      "defaultValue": "500 milliseconds" },
    { "name": "astra.cql.driver-config.advanced.connection.pool.local.size",
      "type": "java.lang.Integer",
      "description":"The number of connections in the pool.",
      "defaultValue": "1" },
    { "name": "astra.cql.driver-config.advanced.connection.pool.remote.size",
      "type": "java.lang.Integer",
      "description":"The number of connections in the pool.",
      "defaultValue": "1" },
    { "name": "astra.cql.driver-config.advanced.connection.max-requests-per-connection",
      "type": "java.lang.Integer",
      "description":"The maximum number of requests that can be executed concurrently on a connection. This must be between 1 and 32768.",
      "defaultValue": "1024"}, 
    { "name": "astra.cql.driver-config.advanced.connection.max-orphan-requests",
      "type": "java.lang.Integer",
      "description":"The maximum number of - orphaned - requests before a connection gets closed automatically.",
      "defaultValue": "24576"},
    { "name": "astra.cql.driver-config.advanced.connection.warn-on-init-error",
      "type": "java.lang.Boolean",
      "description":"Whether to log non-fatal errors when the driver tries to open a new connection.",
      "defaultValue": "true" },
    { "name": "astra.cql.driver-config.advanced.reconnect-on-init",
      "type": "java.lang.Boolean",
      "description":"Whether to schedule reconnection attempts if all contact points are unreachable on the first initialization attempt.",
      "defaultValue": "false" },
    { "name": "astra.cql.driver-config.advanced.reconnection-policy.class",
      "type": "java.lang.String",
      "description":"The policy that controls how often the driver tries to re-establish connections to down nodes.",
      "defaultValue": "ExponentialReconnectionPolicy" },
    { "name": "astra.cql.driver-config.advanced.reconnection-policy.base-delay",
      "type": "java.lang.String",
      "defaultValue": "1 second"},
    { "name": "astra.cql.driver-config.advanced.reconnection-policy.max-delay",
      "type": "java.time.Duration",
      "defaultValue": "60 seconds" },
    { "name": "astra.cql.driver-config.advanced.retry-policy.class",
      "type": "java.lang.String",
      "description":"The policy that controls if the driver retries requests that have failed on one node.",
      "defaultValue": "DefaultRetryPolicy" },
    { "name": "astra.cql.driver-config.advanced.speculative-execution-policy.class",
      "type": "java.lang.String",
      "description":"The class of the policy. If it is not qualified, the driver assumes that it resides in the package com.datastax.oss.driver.internal.core.specex.",
      "defaultValue": "DefaultRetryPolicy" },
    { "name": "astra.cql.driver-config.advanced.speculative-execution-policy.max-executions",
      "type": "java.lang.Integer",
      "description":"The maximum number of executions (including the initial, non-speculative execution). This must be at least one.",
      "defaultValue": "3" },
    { "name": "astra.cql.driver-config.advanced.speculative-execution-policy.delay",
      "type": "java.time.Duration",
      "description":"The delay between each execution. 0 is allowed, and will result in all executions being sent simultaneously when the request starts.",
      "defaultValue": "100 milliseconds"},
    { "name": "astra.cql.driver-config.advanced.auth-provider.class",
      "type": "java.lang.String",
      "description":"The class of the provider. If it is not qualified, the driver assumes that it resides in the package com.datastax.oss.driver.internal.core.auth.",
      "defaultValue": "PlainTextAuthProvider"}, 
    { "name": "astra.cql.driver-config.advanced.auth-provider.username",
      "type": "java.lang.String",
      "defaultValue": "cassandra" },
    { "name": "astra.cql.driver-config.advanced.auth-provider.password",
      "type": "java.lang.String",
      "defaultValue": "cassandra" },
    { "name": "astra.cql.driver-config.advanced.ssl-engine-factory.class",
      "type": "java.lang.String",
      "description":"The class of the factory. If it is not qualified, the driver assumes that it resides in the package com.datastax.oss.driver.internal.core.ssl.",
      "defaultValue": "DefaultSslEngineFactory"},
    { "name": "astra.cql.driver-config.advanced.ssl-engine-factory.cipher-suites",
      "type": "java.util.List",
      "description":"The cipher suites to enable when creating an SSLEngine for a connection.",
      "defaultValue": "[ TLS_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_256_CBC_SHA]" },
    { "name": "astra.cql.driver-config.advanced.ssl-engine-factory.hostname-validation",
      "type": "java.lang.Boolean",
      "description":"Whether or not to require validation that the hostname of the server certificate's common name matches the hostname of the server being connected to. If not set, defaults to true.",
      "defaultValue": "true" },
    { "name": "astra.cql.driver-config.advanced.ssl-engine-factory.truststore-path",
      "type": "java.lang.String",
      "description":"The locations and passwords used to access truststore and keystore contents.",
      "defaultValue": "/path/to/client.truststore" },
    { "name": "astra.cql.driver-config.advanced.ssl-engine-factory.truststore-password",
      "type": "java.lang.String",
      "description":"The locations and passwords used to access truststore and keystore contents.",
      "defaultValue": "c"},
    { "name": "astra.cql.driver-config.advanced.ssl-engine-factory.keystore-path",
      "type": "java.lang.String",
      "description":"The locations and passwords used to access truststore and keystore contents.",
      "defaultValue": "/path/to/client.keystore"},
    { "name": "astra.cql.driver-config.advanced.ssl-engine-factory.keystore-password",
      "type": "java.lang.String",
      "description":"The locations and passwords used to access truststore and keystore contents.",
      "defaultValue": "/path/to/client.keystore" },
      
    { "name": "astra.cql.driver-config.advanced.timestamp-generator.class",
      "type": "java.lang.String",
      "description":"The generator that assigns a microsecond timestamp to each request.",
      "defaultValue": "AtomicTimestampGenerator" },
    { "name": "astra.cql.driver-config.advanced.timestamp-generator.drift-warning.threshold",
      "type": "java.lang.String",
      "description":"How far in the future timestamps are allowed to drift before the warning is logged. If it is undefined or set to 0, warnings are disabled.",
      "defaultValue": "1 second" },
    { "name": "astra.cql.driver-config.advanced.timestamp-generator.drift-warning.interval",
      "type": "java.time.Duration",
      "description":"How often the warning will be logged if timestamps keep drifting above the threshold.",
      "defaultValue": "10 seconds" },
    { "name": "astra.cql.driver-config.advanced.timestamp-generator.force-java-clock",
      "type": "java.lang.Boolean",
      "description":"Whether to force the driver to use Java's millisecond-precision system clock.",
      "defaultValue": "false" },
    
    { "name": "astra.cql.driver-config.advanced.request-tracker.class",
      "type": "java.lang.String",
      "description":"The class of the tracker. If it is not qualified, the driver assumes that it resides in the package com.datastax.oss.driver.internal.core.tracker.",
      "defaultValue": "NoopRequestTracker" },
    { "name": "astra.cql.driver-config.advanced.request-tracker.logs.slow.threshold",
      "type": "java.lang.Integer",
      "description":"The threshold to classify a successful request as slow. If this is unset, all successful requests will be considered as normal.",
      "defaultValue": "NoopRequestTracker" },
    { "name": "astra.cql.driver-config.advanced.request-tracker.logs.slow.enabled",
      "type": "java.lang.Boolean",
      "description":"Whether to log slow requests.",
      "defaultValue": "true" },  
    { "name": "astra.cql.driver-config.advanced.request-tracker.logs.error.enabled",
      "type": "java.lang.Boolean",
      "description":"Whether to log failed requests.",
      "defaultValue": "true" },  
    { "name": "astra.cql.driver-config.advanced.request-tracker.logs.max-query-length",
      "type": "java.lang.Integer",
      "description":"The maximum length of the query string in the log message. If it is longer than that, it will be truncated.",
      "defaultValue": "500" },
    { "name": "astra.cql.driver-config.advanced.request-tracker.logs.show-values",
      "type": "java.lang.Boolean",
      "description":"Whether to log bound values in addition to the query string.",
      "defaultValue": "true" },  
    { "name": "astra.cql.driver-config.advanced.request-tracker.logs.max-value-length",
      "type": "java.lang.Integer",
      "description":"The maximum length for bound values in the log message. If the formatted representation of a value is longer than that, it will be truncated.",
      "defaultValue": "50" },
    { "name": "astra.cql.driver-config.advanced.request-tracker.logs.max-values",
      "type": "java.lang.Integer",
      "description":"The maximum number of bound values to log. If a request has more values, the list of values will be truncated.",
      "defaultValue": "50" },
    { "name": "astra.cql.driver-config.advanced.request-tracker.logs.show-stack-traces",
      "type": "java.lang.Boolean",
      "description":"Whether to log stack traces for failed queries. If this is disabled, the log will just include the exception's string representation (generally the class name and message).",
      "defaultValue": "true" }, 

    { "name": "astra.cql.driver-config.advanced.throttler.class",
      "type": "java.lang.String",
      "description":"The class of the throttler. If it is not qualified, the driver assumes that it resides in  the package com.datastax.oss.driver.internal.core.session.throttling.",
      "defaultValue": "PassThroughRequestThrottler" }, 
    { "name": "astra.cql.driver-config.advanced.throttler.max-queue-size",
      "type": "java.lang.Integer",
      "description":"",
      "defaultValue": "10000" },
    { "name": "astra.cql.driver-config.advanced.throttler.max-concurrent-requests",
      "type": "java.lang.Integer",
      "description":"The maximum number of requests that are allowed to execute in parallel.",
      "defaultValue": "10000" },
    { "name": "astra.cql.driver-config.advanced.throttler.max-requests-per-second",
      "type": "java.lang.Integer",
      "description":"The maximum allowed request rate. Only used by RateLimitingRequestThrottler.",
      "defaultValue": "10000" },
    { "name": "astra.cql.driver-config.advanced.throttler.drain-interval",
      "type": "java.time.Duration",
      "description":"How often the throttler attempts to dequeue requests.",
      "defaultValue": "10 milliseconds" },
      
    { "name": "astra.cql.driver-config.advanced.schema-change-listener.clas",
      "type": "java.lang.String",
      "description":"A session-wide component that listens for node state changes.",
      "defaultValue": "NoopNodeStateListener" },
    { "name": "astra.cql.driver-config.advanced.node-state-listener.class",
      "type": "java.lang.String",
      "description":"A session-wide component that listens for node state changes.",
      "defaultValue": "NoopSchemaChangeListener" },
    { "name": "astra.cql.driver-config.advanced.address-translator.class",
      "type": "java.lang.String",
      "description":"The address translator to use to convert the addresses sent by Cassandra nodes into ones that the driver uses to connect.",
      "defaultValue": "PassThroughAddressTranslator" },      
    
    { "name": "astra.cql.driver-config.advanced.resolve-contact-points",
      "type": "java.lang.Boolean",
      "description":"Whether to resolve the addresses passed to `basic.contact-points`.",
      "defaultValue": "true" },
    
    { "name": "astra.cql.driver-config.advanced.protocol.version",
      "type": "java.lang.String",
      "description":"The native protocol version to use.",
      "defaultValue": "V4" },
    { "name": "astra.cql.driver-config.advanced.protocol.compression",
      "type": "java.lang.String",
      "description":"The name of the algorithm used to compress protocol frames.",
      "defaultValue": "lz4" },
    { "name": "astra.cql.driver-config.advanced.protocol.max-frame-length",
      "type": "java.lang.String",
      "description":"The maximum length of the frames supported by the driver. Beyond that limit, requests will fail with an exception",
      "defaultValue": "256 MB" },
    
    { "name": "astra.cql.driver-config.advanced.request.warn-if-set-keyspace",
      "type": "java.lang.Boolean",
      "description":"Whether a warning is logged when a request (such as a CQL `USE ...`) changes the active keyspace.",
      "defaultValue": "true" },
    { "name": "astra.cql.driver-config.advanced.request.trace.attempts",
      "type": "java.lang.Integer",
      "description":"How many times the driver will attempt to fetch the query if it is not ready yet.",
      "defaultValue": "5" },
    { "name": "astra.cql.driver-config.advanced.request.trace.interval",
      "type": "java.time.Duration",
      "description":"The interval between each attempt.",
      "defaultValue": "3 milliseconds" },
    { "name": "astra.cql.driver-config.advanced.request.trace.consistency",
      "type": "java.lang.String",
      "description":"The consistency level to use for trace queries.",
      "defaultValue": "ONE" },
    { "name": "astra.cql.driver-config.advanced.request.log-warnings",
      "type": "java.lang.Boolean",
      "description":"Whether logging of server warnings generated during query execution should be disabled by the driver.",
      "defaultValue": "true" },
    
    { "name": "astra.cql.driver-config.advanced.metrics.session.enabled",
      "type": "java.util.List",
      "description":"The session-level metrics (all disabled by default).",
      "defaultValue": "[bytes-sent, bytes-received, connected-nodes, cql-requests, cql-client-timeouts, cql-prepared-cache-size, throttling.delay, throttling.queue-size, throttling.errors]" },  
    { "name": "astra.cql.driver-config.advanced.metrics.session.cql-requests.highest-latency",
      "type": "java.time.Duration",
      "description":"The largest latency that we expect to record.",
      "defaultValue": "3 seconds" },
    { "name": "astra.cql.driver-config.advanced.metrics.session.cql-requests.significant-digits",
      "type": "java.lang.Integer",
      "description":"The number of significant decimal digits to which internal structures will maintain value resolution and separation",
      "defaultValue": "3" },
    { "name": "astra.cql.driver-config.advanced.metrics.session.cql-requests.refresh-interval",
      "type": "java.time.Duration",
      "description":"The interval at which percentile data is refreshed.",
      "defaultValue": "5 minutes" },
    { "name": "astra.cql.driver-config.advanced.metrics.session.throttling.delay.highest-latency",
      "type": "java.time.Duration",
      "defaultValue": "3 seconds" },  
    { "name": "astra.cql.driver-config.advanced.metrics.session.throttling.delay.significant-digits",
      "type": "java.lang.Integer",
      "defaultValue": "3" },  
    { "name": "astra.cql.driver-config.advanced.metrics.session.throttling.delay.refresh-interval",
      "type": "java.time.Duration",
      "defaultValue": "5 minutes" },
    
    { "name": "astra.cql.driver-config.advanced.metrics.node.enabled",
      "type": "java.util.List",
      "description":"The node-level metrics (all disabled by default).",
      "defaultValue": "[pool.open-connections, pool.available-streams, pool.in-flight, pool.orphaned-streams, bytes-sent, bytes-sent, cql-messages, errors.request.unsent, errors.request.aborted, errors.request.write-timeouts, errors.request.read-timeouts, errors.request.unavailables, errors.request.others, retries.total, retries.aborted, retries.read-timeout, retries.write-timeout, retries.unavailable, retries.other, ignores.total, ignores.aborted, ignores.read-timeout, ignores.write-timeout, ignores.unavailable, ignores.other, speculative-executions, errors.connection.init, errors.connection.auths]" },
    { "name": "astra.cql.driver-config.advanced.metrics.node.cql-messages.highest-latency",
      "type": "java.time.Duration",
      "description":"See cql-requests in the -session- section.",
      "defaultValue": "3 seconds" },
    { "name": "astra.cql.driver-config.advanced.metrics.node.cql-messages.significant-digits",
      "type": "java.lang.Integer",
      "description":"See cql-requests in the -session- section",
      "defaultValue": "3" },
    { "name": "astra.cql.driver-config.advanced.metrics.node.cql-messages.refresh-interval",
      "type": "java.lang.String",
      "description":"See cql-requests in the -session- section",
      "defaultValue": "refresh-interval" },        
    
    { "name": "astra.cql.driver-config.advanced.socket.tcp-no-delay",
      "type": "java.lang.Boolean",
      "description":"Whether or not to disable the Nagle algorithm.",
      "defaultValue": "true" },
    { "name": "astra.cql.driver-config.advanced.socket.keep-alive",
      "type": "java.lang.Boolean",
      "description":"Whether or not to enable TCP keep-alive probes.",
      "defaultValue": "false" },
    { "name": "astra.cql.driver-config.advanced.socket.reuse-address",
      "type": "java.lang.Boolean",
      "description":"Whether or not to allow address reuse.",
      "defaultValue": "true" },
    { "name": "astra.cql.driver-config.advanced.socket.linger-interval",
      "type": "java.lang.Integer",
      "description":"Sets the linger interval.",
      "defaultValue": "0" },
    { "name": "astra.cql.driver-config.advanced.socket.receive-buffer-size",
      "type": "java.lang.Integer",
      "description":"Sets a hint to the size of the underlying buffers for incoming network I/O.",
      "defaultValue": "65535" },
    { "name": "astra.cql.driver-config.advanced.socket.send-buffer-size",
      "type": "java.lang.Integer",
      "description":"Sets a hint to the size of the underlying buffers for outgoing network I/O.",
      "defaultValue": "65535" },
    
    { "name": "astra.cql.driver-config.advanced.heartbeat.interval",
      "type": "java.time.Duration",
      "description":"The heartbeat interval.",
      "defaultValue": "30 seconds" }, 
    { "name": "astra.cql.driver-config.advanced.heartbeat.timeout",
      "type": "java.time.Duration",
      "description":"The heartbeat interval.",
      "defaultValue": "500 milliseconds" },
  
    { "name": "astra.cql.driver-config.advanced.metadata.topology-event-debouncer.window",
      "type": "java.lang.String",
      "description":"How long the driver waits to propagate an event",
      "defaultValue": "1 second" },
    { "name": "astra.cql.driver-config.advanced.metadata.topology-event-debouncer.max-events",
      "type": "java.lang.Integer",
      "description":"The maximum number of events that can accumulate.",
      "defaultValue": "20" },
    { "name": "astra.cql.driver-config.advanced.metadata.schema.enabled",
      "type": "java.lang.Boolean",
      "description":"Whether schema metadata is enabled.",
      "defaultValue": "true" },
    { "name": "astra.cql.driver-config.advanced.metadata.schema.refreshed-keyspaces",
      "type": "java.util.List",
      "description":"The list of keyspaces for which schema and token metadata should be maintained.",
      "defaultValue": "[]" },
    { "name": "astra.cql.driver-config.advanced.metadata.schema.request-timeout",
      "type": "java.time.Duration",
      "description":"The timeout for the requests to the schema tables.",
      "defaultValue": "2 seconds" },
    { "name": "astra.cql.driver-config.advanced.metadata.schema.request-page-size",
      "type": "java.lang.Integer",
      "description":"The page size for the requests to the schema tables.",
      "defaultValue": "5000" },      
    { "name": "astra.cql.driver-config.advanced.metadata.schema.debouncer.window",
      "type": "java.lang.String",
      "description":"How long the driver waits to apply a refresh.",
      "defaultValue": "1 second" },
    { "name": "astra.cql.driver-config.advanced.metadata.schema.debouncer.max-events",
      "type": "java.lang.Integer",
      "description":"The maximum number of refreshes that can accumulate.",
      "defaultValue": "20" },
    { "name": "astra.cql.driver-config.advanced.metadata.token-map.enabled",
      "type": "java.lang.Boolean",
      "description":"Whether token metadata (Cluster.getMetadata.getTokenMap) is enabled.",
      "defaultValue": "true" },
    
    { "name": "astra.cql.driver-config.advanced.control-connection.timeout",
      "type": "java.time.Duration",
      "description":"How long the driver waits for responses to control queries (e.g. fetching the list of nodes, refreshing the schema).",
      "defaultValue": "2 seconds" },
    { "name": "astra.cql.driver-config.advanced.control-connection.schema-agreement.interval",
      "type": "java.time.Duration",
      "description":"The interval between each attempt.",
      "defaultValue": "200 milliseconds" },
    { "name": "astra.cql.driver-config.advanced.control-connection.schema-agreement.timeout",
      "type": "java.time.Duration",
      "description":"The timeout after which schema agreement fails.",
      "defaultValue": "10 seconds" },
    { "name": "astra.cql.driver-config.advanced.control-connection.schema-agreement.warn-on-failure",
      "type": "java.lang.Boolean",
      "description":"Whether to log a warning if schema agreement fails.",
      "defaultValue": "true" },
    
    { "name": "astra.cql.driver-config.advanced.prepared-statements.prepare-on-all-nodes",
      "type": "java.lang.Boolean",
      "description":"Whether Session.prepare calls should be sent to all nodes in the cluster.",
      "defaultValue": "true" },
    { "name": "astra.cql.driver-config.advanced.prepared-statements.reprepare-on-up.enabled",
      "type": "java.lang.Boolean",
      "description":"Whether the driver tries to prepare on new nodes at all.",
      "defaultValue": "true" },
    { "name": "astra.cql.driver-config.advanced.prepared-statements.reprepare-on-up.check-system-table",
      "type": "java.lang.Boolean",
      "description":"Whether to check `system.prepared_statements` on the target node before repreparing.",
      "defaultValue": "false" },
    { "name": "astra.cql.driver-config.advanced.prepared-statements.reprepare-on-up.max-statements",
      "type": "java.lang.Integer",
      "description":"The maximum number of statements that should be reprepared. 0 or a negative value means no limit.",
      "defaultValue": "0" },
    { "name": "astra.cql.driver-config.advanced.prepared-statements.reprepare-on-up.max-parallelism",
      "type": "java.lang.Integer",
      "description":"The maximum number of concurrent requests when repreparing.",
      "defaultValue": "100" },
    { "name": "astra.cql.driver-config.advanced.prepared-statements.reprepare-on-up.timeout",
      "type":"java.time.Duration",
      "description":"The request timeout. This applies both to querying the system.prepared_statements table (if relevant), and the prepare requests themselves.)",
      "defaultValue": "500 milliseconds" },
    
    { "name": "astra.cql.driver-config.advanced.netty.daemon",
      "type": "java.lang.Boolean",
      "description":"Whether the threads created by the driver should be daemon threads.",
      "defaultValue": "false" },
    { "name": "astra.cql.driver-config.advanced.netty.io-group.size",
      "type": "java.lang.Integer",
      "description":"The number of threads.",
      "defaultValue": "0" },
    { "name": "astra.cql.driver-config.advanced.netty.io-group.shutdown.quiet-period",
      "type": "java.lang.Integer",
      "defaultValue": "2" },
    { "name": "astra.cql.driver-config.advanced.netty.io-group.shutdown.timeout",
      "type": "java.lang.Integer",
      "defaultValue": "15" },      
    { "name": "astra.cql.driver-config.advanced.netty.io-group.shutdown.unit",
      "type": "java.lang.String",
      "defaultValue": "SECONDS" },
    { "name": "astra.cql.driver-config.advanced.netty.admin-group.size",
      "type": "java.lang.Integer",
      "description":"The number of threads.",
      "defaultValue": "2" },
    { "name": "astra.cql.driver-config.advanced.netty.admin-group.shutdown.quiet-period",
      "type": "java.lang.Integer",
      "defaultValue": "2" },
    { "name": "astra.cql.driver-config.advanced.netty.admin-group.shutdown.timeout",
      "type": "java.lang.Integer",
      "defaultValue": "15" },      
    { "name": "astra.cql.driver-config.advanced.netty.admin-group.shutdown.unit",
      "type": "java.lang.String",
      "defaultValue": "SECONDS" },
    { "name": "astra.cql.driver-config.advanced.netty.timer.tick-duration",
      "type": "java.time.Duration",
      "description":"The timer tick duration.",
      "defaultValue": "100 milliseconds" },
    { "name": "astra.cql.driver-config.advanced.netty.timer.ticks-per-wheel",
      "type": "java.lang.Integer",
      "description":"Number of ticks in a Timer wheel.",
      "defaultValue": "2048" },
    { "name": "astra.cql.driver-config.advanced.coalescer.max-runs-with-no-work",
      "type": "java.lang.Integer",
      "description":"How many times the coalescer is allowed to reschedule itself when it did no work.",
      "defaultValue": "5" },
    { "name": "astra.cql.driver-config.advanced.coalescer.reschedule-interval",
      "type":"java.time.Duration",
      "description":"The reschedule interval.",
      "defaultValue": "10 microseconds" }
      
  ],
  "hints": [
	{ "name": "astra.cql.driver-config.basic.request.consistency",
	  "values": [
			{ "value": "ALL",          "description": "All" },
			{ "value": "EACH_QUORUM",  "description": "Quorum in each datacenter." },
			{ "value": "QUORUM",       "description": "Quorum of all nodes across all datacenters. Some level of failure is possible." },
			{ "value": "LOCAL_QUORUM", "description": "Quorum of replicas in the same datacenter as the coordinator node. Avoids communication latency between datacenters." },
			{ "value": "ONE",          "description": "Closest replica as determined by the snitch. Satisfies the needs of most users because the consistency requirements are not stringent." },
			{ "value": "TWO",          "description": "Closest two replicas as determined by the snitch." },
			{ "value": "THREE",        "description": "Closest three replicas as determined by the snitch." },
			{ "value": "LOCAL_ONE",    "description": "Returns a response from the closest replica in the local datacenter. For security and quality, use in an offline datacenter to prevent automatic connection to online nodes in other datacenters." },
			{ "value": "ANY",          "description": "Closest replica, as determined by the snitch. If all replica nodes are down, write succeeds after a hinted handoff. Provides low latency and guarantees that writes never fail." }
	   ]
	},
	{ "name": "astra.cql.driver-config.basic.request.serial-consistency",
	  "values": [
			{ "value": "SERIAL",       "description": "Returns results with the most recent data including an inflight LWT (uncommitted). Commits an inflight LWT as part of the read.Writes NOT supported." },
			{ "value": "LOCAL_SERIAL", "description": "Same as SERIAL, but confined to the datacenter. Writes NOT supported." }
	   ]
	},
	{ "name": "astra.cql.driver-config.advanced.protocol.compression",
	  "values": [
			{ "value": "lz4",    "description": "requires net.jpountz.lz4:lz4 in the classpath." },
			{ "value": "snappy", "description": "requires org.xerial.snappy:snappy-java in the classpath." }
	   ]
	},
	{ "name": "astra.cql.driver-config.advanced.request.trace.consistency",
	  "values": [
			{ "value": "ALL",          "description": "All" },
			{ "value": "EACH_QUORUM",  "description": "Quorum in each datacenter." },
			{ "value": "QUORUM",       "description": "Quorum of all nodes across all datacenters. Some level of failure is possible." },
			{ "value": "LOCAL_QUORUM", "description": "Quorum of replicas in the same datacenter as the coordinator node. Avoids communication latency between datacenters." },
			{ "value": "ONE",          "description": "Closest replica as determined by the snitch. Satisfies the needs of most users because the consistency requirements are not stringent." },
			{ "value": "TWO",          "description": "Closest two replicas as determined by the snitch." },
			{ "value": "THREE",        "description": "Closest three replicas as determined by the snitch." },
			{ "value": "LOCAL_ONE",    "description": "Returns a response from the closest replica in the local datacenter. For security and quality, use in an offline datacenter to prevent automatic connection to online nodes in other datacenters." },
			{ "value": "ANY",          "description": "Closest replica, as determined by the snitch. If all replica nodes are down, write succeeds after a hinted handoff. Provides low latency and guarantees that writes never fail." }
	   ]
	},
	{ "name": "astra.cql.driver-config.advanced.metrics.session.enabled",
	  "values": [
			{ "value": "bytes-sent",              "description": "The number and rate of bytes sent for the entire session (exposed as a Meter)." },
			{ "value": "bytes-received",          "description": "The number and rate of bytes received for the entire session (exposed as a Meter)." },
			{ "value": "connected-nodes",         "description": "The number of nodes to which the driver has at least one active connection (exposed as a Gauge<Integer>)." },
			{ "value": "cql-requests",            "description": "The throughput and latency percentiles of CQL requests (exposed as a Timer)." },
			{ "value": "cql-client-timeouts",     "description": "The number of CQL requests that timed out" },
			{ "value": "cql-prepared-cache-size", "description": "The size of the driver-side cache of CQL prepared statements." },
			{ "value": "throttling.delay",        "description": "How long requests are being throttled (exposed as a Timer)." },
			{ "value": "throttling.queue-size",   "description": "The size of the throttling queue (exposed as a Gauge<Integer>)." },
			{ "value": "throttling.errors",       "description": "The number of times a request was rejected with a RequestThrottlingException (exposed as Counter)." }
	   ]
	},
	{ "name": "astra.cql.driver-config.advanced.metrics.node.enabled",
	  "values": [
			{ "value": "pool.open-connections",        "description": "The number of connections open to this node for regular requests (exposed as a Gauge<Integer>)." },
			{ "value": "pool.available-streams",       "description": "The number of stream ids available on the connections to this node (exposed as a Gauge<Integer>)." },
			{ "value": "pool.in-flight",               "description": "The number of requests currently executing on the connections to this node (exposed as a Gauge<Integer>)." },
			{ "value": "pool.orphaned-streams",        "description": "The number of -orphaned- stream ids on the connections to this node (exposed as a Gauge<Integer>)." },
			{ "value": "bytes-sent",                   "description": "The number and rate of bytes sent to this node (exposed as a Meter)." },
			{ "value": "bytes-received",               "description": "The number and rate of bytes received from this node (exposed as a Meter)." },
			{ "value": "cql-messages",                 "description": "The throughput and latency percentiles of individual CQL messages sent to this node as part of an overall request (exposed as a Timer)." },
			{ "value": "errors.request.unsent",        "description": "The number of times the driver failed to send a request to this node (exposed as a Countner)" },
			{ "value": "errors.request.aborted",       "description": "The number of times a request was aborted before the driver even received a response from this node (exposed as a Counter)." },
			{ "value": "errors.request.write-timeouts","description": "The number of times this node replied with a WRITE_TIMEOUT error (exposed as a Counter)." },
			{ "value": "errors.request.read-timeouts", "description": "The number of times this node replied with a READ_TIMEOUT error (exposed as a Counter)." },
			{ "value": "errors.request.unavailables",  "description": "The number of times this node replied with an UNAVAILABLE error (exposed as a Counter)." },
			{ "value": "errors.request.others",        "description": "The number of times this node replied with an error that doesn't fall under other 'errors.*' metrics (exposed as a Counter)." },
			{ "value": "retries.total",                "description": "The total number of errors on this node that caused the RetryPolicy to trigger a retry" },
			{ "value": "retries.aborted",              "description": "The number of errors on this node that caused the RetryPolicy to trigger a retry, broken down by error type (exposed as Counters)." },
			{ "value": "retries.read-timeout",         "description": "The number of errors on this node that caused the RetryPolicy to trigger a retry, broken down by error type (exposed as Counters)." },
			{ "value": "retries.write-timeout",        "description": "The number of errors on this node that caused the RetryPolicy to trigger a retry, broken down by error type (exposed as Counters)." },
			{ "value": "retries.unavailable",          "description": "The number of errors on this node that caused the RetryPolicy to trigger a retry, broken down by error type (exposed as Counters)." },
			{ "value": "retries.other",                "description": "The number of errors on this node that caused the RetryPolicy to trigger a retry, broken down by error type (exposed as Counters)." },
			{ "value": "ignores.total",                "description": "The total number of errors on this node that were ignored by the RetryPolicy (exposed as a Counter)" },
			{ "value": "ignores.aborted",              "description": "The number of errors on this node that were ignored by the RetryPolicy, broken down by error type (exposed as Counters)." },
			{ "value": "ignores.read-timeout",         "description": "The number of errors on this node that were ignored by the RetryPolicy, broken down by error type (exposed as Counters)." },
			{ "value": "ignores.write-timeout",        "description": "The number of errors on this node that were ignored by the RetryPolicy, broken down by error type (exposed as Counters)." },
			{ "value": "ignores.unavailable",          "description": "The number of errors on this node that were ignored by the RetryPolicy, broken down by error type (exposed as Counters)." },
			{ "value": "ignores.other",                "description": "The number of errors on this node that were ignored by the RetryPolicy, broken down by error type (exposed as Counters)." },
			{ "value": "speculative-executions",       "description": "The number of speculative executions triggered by a slow response from this node (exposed as a Counter)." },
			{ "value": "errors.connection.init",       "description": "The number of errors encountered while trying to establish a connection to this node (exposed as a Counter)." },
			{ "value": "errors.connection.auth",       "description": "The number of authentication errors encountered while trying to establish a connection to this node (exposed as a Counter)." }
	   ]
	}
]}